version: '3.4'

services:
  php:
    build:
      context: ./
      target: php
    depends_on:
    - db
    env_file:
    - ./.env.docker
    # Comment out these volumes in production
    volumes:
    - ./:/srv/api:rw,cached
    # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
    # - ./api/var:/srv/api/var:rw

  api:
    build:
      context: ./
      target: nginx
    depends_on:
    - php
    # Comment out this volume in production
    volumes:
    - ./public:/srv/api/public:ro
    ports:
    - "8085:80"

  cache-proxy:
    build:
      context: ./
      target: varnish
    depends_on:
    - api
    volumes:
    - ./docker/varnish/conf:/usr/local/etc/varnish:ro
    tmpfs:
    - /usr/local/var/varnish:exec
    ports:
    - "8081:80"

  db:
    # In production, you may want to use a managed database service
    image: mysql:5
    environment:
    - MYSQL_DATABASE=jobs_db
    # You should definitely change the password in production
    - MYSQL_ROOT_PASSWORD=SuperSecretDevPassword
    volumes:
    - db-data:/var/lib/postgresql/data:rw
    # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
    # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
    - "3306:3306"

volumes:
  db-data: {}